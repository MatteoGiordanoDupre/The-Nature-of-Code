//Example 1.10 is remarkably close to the concept of gravitational attraction, with the object being 
//attracted to the mouse position. In the example, however, the attraction magnitude is constant, 
//whereas with a real-life gravitational force, the magnitude is inversely proportional to distance: the 
//closer the object is to the attraction point, the faster it accelerates. I’ll cover gravitational 
//attraction in more detail in the next chapter, but for now, try implementing your own version of 
//Example 1.10 with a variable magnitude of acceleration, stronger when it’s either closer or farther 
//away.


let mover;

function setup() {
  createCanvas(640, 240);
  
  mover = new Mover();
}

function draw() {
  background(255);
  mover.update();
  mover.checkEdges();
  mover.show();
}

class Mover {
  constructor() {
    this.position = createVector(width / 2, height / 2);
    this.velocity = createVector(0, 0); 
    this.acceleration = createVector(0.01, 0.01);
    this.topSpeed = 10;
  }

update() {
  let mouse = createVector(mouseX, mouseY);
  let dir = p5.Vector.sub(mouse, this.position); 
  let distance = dir.mag(); 
  
  dir.setMag(map(distance, 0, width, 0.1, 9)); 
  
  this.acceleration = dir; 
  this.velocity.add(this.acceleration); 
  this.velocity.limit(this.topSpeed); 
  this.position.add(this.velocity); 
}

    
  show() {
    stroke(0);
    strokeWeight(2);
    fill(127);
    circle(this.position.x, this.position.y, 48);
  }

  checkEdges() {
    if (this.position.x > width) {
      this.position.x = 0;
    } else if (this.position.x < 0) {
      this.position.x = width;
    }

    if (this.position.y > height) {
      this.position.y = 0;
    } else if (this.position.y < 0) {
      this.position.y = height;
    }
  }
}
