// Referring back to Example 0.6, implement an acceleration calculated with Perlin noise.

// I added the seeds and offsets needed for the noise() function and then used them to define acceleration

let mover;

function setup() {
  createCanvas(1000, 1000);
  // Create the Mover object.
  mover = new Mover();
}

function draw() {
  background(255);
  mover.update();
  mover.checkEdges();
  mover.show();
}

class Mover {
  constructor() {
    this.position = createVector(width / 2, height / 2);
    this.velocity = createVector(0, 0); 
    this.tx = 0; 
    this.ty = 1000; 
    this.acceleration = createVector(0, 0);
    this.topSpeed = 10;
  }

  update() {
    // update time offsets
    this.tx += 0.01;
    this.ty += 0.01;

    // perlin noise values for acceleration
    let ax = map(noise(this.tx), 0, 1, -1, 1);
    let ay = map(noise(this.ty), 0, 1, -1, 1);

    this.acceleration.set(ax, ay);

    
    this.velocity.add(this.acceleration);
    this.velocity.limit(this.topSpeed);
    this.position.add(this.velocity);
  }

  show() {
    stroke(0);
    strokeWeight(2);
    fill(127);
    circle(this.position.x, this.position.y, 48);
  }

  checkEdges() {
    if (this.position.x > width) {
      this.position.x = 0;
    } else if (this.position.x < 0) {
      this.position.x = width;
    }

    if (this.position.y > height) {
      this.position.y = 0;
    } else if (this.position.y < 0) {
      this.position.y = height;
    }
  }
}
